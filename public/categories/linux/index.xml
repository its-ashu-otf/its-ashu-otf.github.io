<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Ashu&#39;s 0Day Arsenal</title>
    <link>http://localhost:1313/categories/linux/</link>
    <description>Recent content in Linux on Ashu&#39;s 0Day Arsenal</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Feb 2025 21:40:09 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enhancing Clipboard Management in Kali Linux with Clipman</title>
      <link>http://localhost:1313/posts/2025/febraury/clipboard-manager/</link>
      <pubDate>Fri, 14 Feb 2025 21:40:09 +0530</pubDate>
      <guid>http://localhost:1313/posts/2025/febraury/clipboard-manager/</guid>
      <description>&lt;h1 id=&#34;enhancing-clipboard-management-in-kali-linux-with-clipman&#34;&gt;Enhancing Clipboard Management in Kali Linux with Clipman&lt;/h1&gt;&#xA;&lt;p&gt;![[clipboard.png]]&lt;/p&gt;&#xA;&lt;p&gt;If you’re a Kali Linux user, you might have noticed that Linux lacks a built-in clipboard manager with a convenient shortcut like Windows + V. This can be frustrating, especially if you&amp;rsquo;re accustomed to managing your clipboard history seamlessly on Windows. To solve this, I’ve developed a simple Clipboard Manager add-on for Kali Linux that integrates Clipman and binds it to the Windows + V shortcut. Let’s dive into the setup and benefits of this handy tool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ultimate ZSH Prompt</title>
      <link>http://localhost:1313/posts/2025/january/ultimate-zsh-prompt/</link>
      <pubDate>Thu, 23 Jan 2025 23:12:09 +0530</pubDate>
      <guid>http://localhost:1313/posts/2025/january/ultimate-zsh-prompt/</guid>
      <description>&lt;p&gt;The &lt;code&gt;.zshrc&lt;/code&gt; file is a script that runs every time a new terminal session is started in Unix-like operating systems. It is used to configure the shell session, set up aliases, define functions, and more, making the terminal easier to use and more powerful. Below is a summary of the key sections and functionalities defined in the provided &lt;code&gt;.zshrc&lt;/code&gt; file.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;This sets up myZSH for you. It will backup your current .zshrc if you already have one.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
